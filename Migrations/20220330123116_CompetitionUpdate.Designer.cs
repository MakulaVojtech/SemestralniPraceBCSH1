// <auto-generated />
using System;
using Makula_semestralni_prace.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Makula_semestralni_prace.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220330123116_CompetitionUpdate")]
    partial class CompetitionUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("Makula_semestralni_prace.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Makula_semestralni_prace.Data.Models.Competition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Competition");
                });

            modelBuilder.Entity("Makula_semestralni_prace.Data.Models.Competitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("CompetitionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Corda")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Points")
                        .HasColumnType("REAL");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompetitionId");

                    b.ToTable("Competitors");
                });

            modelBuilder.Entity("Makula_semestralni_prace.Data.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Competitor1Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Competitor2Id")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RoundId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Competitor1Id");

                    b.HasIndex("Competitor2Id");

                    b.HasIndex("RoundId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Makula_semestralni_prace.Data.Models.Round", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CompetitionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoundNo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompetitionId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("Makula_semestralni_prace.Data.Models.Competitor", b =>
                {
                    b.HasOne("Makula_semestralni_prace.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Makula_semestralni_prace.Data.Models.Competition", null)
                        .WithMany("Competitors")
                        .HasForeignKey("CompetitionId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Makula_semestralni_prace.Data.Models.Game", b =>
                {
                    b.HasOne("Makula_semestralni_prace.Data.Models.Competitor", "Competitor1")
                        .WithMany()
                        .HasForeignKey("Competitor1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Makula_semestralni_prace.Data.Models.Competitor", "Competitor2")
                        .WithMany()
                        .HasForeignKey("Competitor2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Makula_semestralni_prace.Data.Models.Round", null)
                        .WithMany("Games")
                        .HasForeignKey("RoundId");

                    b.Navigation("Competitor1");

                    b.Navigation("Competitor2");
                });

            modelBuilder.Entity("Makula_semestralni_prace.Data.Models.Round", b =>
                {
                    b.HasOne("Makula_semestralni_prace.Data.Models.Competition", null)
                        .WithMany("Rounds")
                        .HasForeignKey("CompetitionId");
                });

            modelBuilder.Entity("Makula_semestralni_prace.Data.Models.Competition", b =>
                {
                    b.Navigation("Competitors");

                    b.Navigation("Rounds");
                });

            modelBuilder.Entity("Makula_semestralni_prace.Data.Models.Round", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
